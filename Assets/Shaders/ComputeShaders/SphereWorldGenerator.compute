// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWStructuredBuffer<float> chunk;
float3 chunkPosition;

uint getIndex(uint3 id)
{
    return id.x * 64 * 64  + id.y * 64 + id.z;
}

float sphere(uint3 id, float3 chunkPosition, float radius)
{
    float3 pt = id + chunkPosition;
    if (length(pt) < radius)
    {
        return 1.0;
    }
    return -1.0;
}

[numthreads(8,8,8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint index = getIndex(id);
    float value = sphere(id, chunkPosition, 32);
    chunk[index] = value;
}
