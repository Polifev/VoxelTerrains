// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWStructuredBuffer<float4> corners;
float3 offset;
uint size[3];

uint getIndex(uint3 id, uint size[3])
{
    return id.x * 64 * 64  + id.y * 64 + id.z;
}

float sphere(uint3 id, float3 offset, float radius)
{
    float3 pt = id + offset;
    if (length(pt) < 16)
    {
        return 1.0;
    }
    return -1.0;
}

[numthreads(8,8,8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint index = getIndex(id, size);
    float4 value = float4(0, 0, 0, 0);
    value.w = sphere(id, offset, 4);
    corners[index] = value;
}
